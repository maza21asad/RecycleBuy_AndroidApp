package com.zmonster.recyclebuy.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.zmonster.recyclebuy.bean.Cart;
import com.zmonster.recyclebuy.bean.Favorite;
import com.zmonster.recyclebuy.bean.Information;
import com.zmonster.recyclebuy.bean.Order;
import com.zmonster.recyclebuy.bean.Points;
import com.zmonster.recyclebuy.bean.Shop;
import com.zmonster.recyclebuy.bean.User;

import com.zmonster.recyclebuy.dao.CartDao;
import com.zmonster.recyclebuy.dao.FavoriteDao;
import com.zmonster.recyclebuy.dao.InformationDao;
import com.zmonster.recyclebuy.dao.OrderDao;
import com.zmonster.recyclebuy.dao.PointsDao;
import com.zmonster.recyclebuy.dao.ShopDao;
import com.zmonster.recyclebuy.dao.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig cartDaoConfig;
    private final DaoConfig favoriteDaoConfig;
    private final DaoConfig informationDaoConfig;
    private final DaoConfig orderDaoConfig;
    private final DaoConfig pointsDaoConfig;
    private final DaoConfig shopDaoConfig;
    private final DaoConfig userDaoConfig;

    private final CartDao cartDao;
    private final FavoriteDao favoriteDao;
    private final InformationDao informationDao;
    private final OrderDao orderDao;
    private final PointsDao pointsDao;
    private final ShopDao shopDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        cartDaoConfig = daoConfigMap.get(CartDao.class).clone();
        cartDaoConfig.initIdentityScope(type);

        favoriteDaoConfig = daoConfigMap.get(FavoriteDao.class).clone();
        favoriteDaoConfig.initIdentityScope(type);

        informationDaoConfig = daoConfigMap.get(InformationDao.class).clone();
        informationDaoConfig.initIdentityScope(type);

        orderDaoConfig = daoConfigMap.get(OrderDao.class).clone();
        orderDaoConfig.initIdentityScope(type);

        pointsDaoConfig = daoConfigMap.get(PointsDao.class).clone();
        pointsDaoConfig.initIdentityScope(type);

        shopDaoConfig = daoConfigMap.get(ShopDao.class).clone();
        shopDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        cartDao = new CartDao(cartDaoConfig, this);
        favoriteDao = new FavoriteDao(favoriteDaoConfig, this);
        informationDao = new InformationDao(informationDaoConfig, this);
        orderDao = new OrderDao(orderDaoConfig, this);
        pointsDao = new PointsDao(pointsDaoConfig, this);
        shopDao = new ShopDao(shopDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(Cart.class, cartDao);
        registerDao(Favorite.class, favoriteDao);
        registerDao(Information.class, informationDao);
        registerDao(Order.class, orderDao);
        registerDao(Points.class, pointsDao);
        registerDao(Shop.class, shopDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        cartDaoConfig.clearIdentityScope();
        favoriteDaoConfig.clearIdentityScope();
        informationDaoConfig.clearIdentityScope();
        orderDaoConfig.clearIdentityScope();
        pointsDaoConfig.clearIdentityScope();
        shopDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
    }

    public CartDao getCartDao() {
        return cartDao;
    }

    public FavoriteDao getFavoriteDao() {
        return favoriteDao;
    }

    public InformationDao getInformationDao() {
        return informationDao;
    }

    public OrderDao getOrderDao() {
        return orderDao;
    }

    public PointsDao getPointsDao() {
        return pointsDao;
    }

    public ShopDao getShopDao() {
        return shopDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
